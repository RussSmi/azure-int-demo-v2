trigger:
  branches:
    include:
    - main
  paths:
    include:
    - logicapps
    - bicep
    exclude:
      - functions
      - base
      - notes
      - pipelines
      - platform
      - tfstate
      - .gitignore
      - azure-int-demo-v2.code-workspace
      - readme.md

pr: none

pool:
  vmImage: 'ubuntu-18.04'

variables:
- template: variables/pipeline-vars.yml

jobs:
- job: logic_app_build
  displayName: 'Build and publish logic app'
  steps:
  - task: CopyFiles@2
    displayName: 'Create project folder'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/logicapps'
      Contents: |
        host.json
        proxies.json
        connections.json
        Artifacts/**/*
        la-publish-ais-demo/**
        la-subscribe-ais-demo/**
      TargetFolder: 'project_output'
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/pipelines/scripts'
      TargetFolder: '$(build.artifactstagingdirectory)/scripts'
      Contents: '**'
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/bicep'
      TargetFolder: '$(build.artifactstagingdirectory)/bicep'
      Contents: '**'

  - task: ArchiveFiles@2
    displayName: 'Create project zip'
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)/project_output'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      replaceExistingArchive: true

  - task: PublishPipelineArtifact@1
    displayName: 'Publish project zip artifact'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      artifact: '$(logicAppCIArtifactName)'
      publishLocation: 'pipeline'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/**'
      ArtifactName: 'drop'
      publishLocation: 'Container'
